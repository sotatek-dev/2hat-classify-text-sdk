/**
 * Classify text into risk scores
 * Will take text and classify it via risk  
 *
 * OpenAPI spec version: 2.0.1
 * Contact: support@twohat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ConfigTextClassifier } from './configTextClassifier';
import { HttpsapiSwaggerhubComapistwohatrules202componentsschemasRule } from './httpsapiSwaggerhubComapistwohatrules202componentsschemasRule';
import { HttpsapiSwaggerhubComapistwohatshared200componentsschemasClientId } from './httpsapiSwaggerhubComapistwohatshared200componentsschemasClientId';
import { HttpsapiSwaggerhubComapistwohatshared200componentsschemasLanguageCode } from './httpsapiSwaggerhubComapistwohatshared200componentsschemasLanguageCode';
import { PreField } from './preField';
import { TextField } from './textField';

export interface TextInput { 
    clientId: HttpsapiSwaggerhubComapistwohatshared200componentsschemasClientId;
    /**
     * What kind of UGC are you classifiying
     */
    contentType?: TextInput.ContentTypeEnum;
    language: HttpsapiSwaggerhubComapistwohatshared200componentsschemasLanguageCode;
    text: TextField;
    pre?: PreField;
    config?: ConfigTextClassifier;
    /**
     * Pass in potential rules so you can test the impact to the system
     */
    testRules?: Array<HttpsapiSwaggerhubComapistwohatrules202componentsschemasRule>;
}
export namespace TextInput {
    export type ContentTypeEnum = 'SHORT_TEXT' | 'LONG_TEXT' | 'USERNAME';
    export const ContentTypeEnum = {
        SHORTTEXT: 'SHORT_TEXT' as ContentTypeEnum,
        LONGTEXT: 'LONG_TEXT' as ContentTypeEnum,
        USERNAME: 'USERNAME' as ContentTypeEnum
    };
}